/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(!head||!head->next){return NULL;}
        ListNode *fast=head->next, *slow=head;
        while(fast&&slow!=fast){
            fast=fast->next;
            if(fast&&slow!=fast){
                fast=fast->next;
                slow=slow->next;
            }
        }
        if(slow!=fast){
            return NULL;
        }else{
            int looplength=0;
            fast=fast->next;
            looplength=1;
            while(fast!=slow){
                fast=fast->next;
                looplength++;
            }
            
            fast=head, slow=head;
            for(int i=0;i<looplength;i++){
                fast=fast->next;
            }
            
            while(fast!=slow){
                fast=fast->next;
                slow=slow->next;
            }
            
            return fast;
        }
    }
};
