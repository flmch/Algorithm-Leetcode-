class Solution {
public:
    int maxProfit(vector<int> &prices) {
        int len=prices.size();
        if(len==0||len==1){return 0;}
        
        //find first local minimum
        int check=0,cur=1;
        while(cur<len&&check==0){
            if(prices[cur]>prices[cur-1]){
                check=1;
                break;
            }
            cur++;
        }
        if(check==0){return 0;}
        
        //construct the array with only max and min, 
        vector<int> minmaxonly;
        minmaxonly.push_back(cur-1);
        int flag=1;
        for(int i=cur;i<len;i++){
            if(i==len-1){
                if(prices[minmaxonly.back()]!=prices[i]){
                minmaxonly.push_back(i);                    
                }
            }else if((prices[i]-prices[i+1])*flag>0){
                minmaxonly.push_back(i);
                flag*=-1;
            }
        }
        
        int len2=minmaxonly.size();
        
        //tow for loop to find max profit
        int profit=0;
        for(int i=0;i<len2;i+=2){
            for(int j=i+1;j<len2;j+=2){
                profit=profit<prices[minmaxonly[j]]-prices[minmaxonly[i]]?prices[minmaxonly[j]]-prices[minmaxonly[i]]:profit;
            }
        }
        
        return profit;
    }
};
