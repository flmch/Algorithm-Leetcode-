class Solution {
public:
    vector<int> spiralOrder(vector<vector<int> > &matrix) {
         
         vector<int> result;
         if(matrix.empty()){return result;}
         
         int m=matrix.size();
         int n=matrix[0].size();
         if(m==1){return matrix[0];}
         if(n==1){
             for(int i=0;i<m;i++){
                 result.push_back(matrix[i][0]);
             }
             return result;
         }
         int total=m*n;
         result.assign(total,0);
         
         int i=1,row=0,col=0;
         result[0]=matrix[0][0];
         while(i<total){
             
            
             for(int r1=1;r1<n;r1++){
                 result[i++]=matrix[row][++col];
             } 
             if(i!=matrix[0].size()){n--;}
            
            
            if(m>1){
             for(int r2=1;r2<m;r2++){
                 result[i++]=matrix[++row][col];
             }
             m--;
            }
           
           if(n>1){
             for(int r3=1;r3<n;r3++){
                 result[i++]=matrix[row][--col];
             } 
             n--;
           }
           
           if(m>1){
             for(int r4=1;r4<m;r4++){
                 result[i++]=matrix[--row][col];
             }
             m--;
           }       
   
         }
         
         return result;
    }
};
