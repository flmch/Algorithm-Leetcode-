void getall(vector<int> &num, int st, vector<vector<int> > &result,vector<int> &temp, vector<int> &visit){
     if(st==num.size()){
         result.push_back(temp);
     }else{
         for(int i=0;i<num.size();i++){
             while(num[i]==num[i+1]&&i+1<num.size()&&visit[i+1]==0){
                 i++;
             }
             if(visit[i]==0){
                 visit[i]=1;
                 temp.push_back(num[i]);
                 getall(num,st+1,result,temp,visit);
                 temp.pop_back();
                 visit[i]=0;
             }
         }
     }
}


class Solution {
public:
    vector<vector<int> > permuteUnique(vector<int> &num) {
        vector<vector<int> > result;
        vector<int> temp;
        int len=num.size();
        if(len==0){
            return result;
        }
        
        vector<int> visit(len,0);
        sort(num.begin(),num.end());
        getall(num,0,result,temp,visit);
        sort(result.begin(),result.end());
        
        return result;
    }
};
