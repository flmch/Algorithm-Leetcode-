/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
         if(!l1&&!l2){return l1;}
         if(!l1){return l2;}
         if(!l2){return l1;}
         ListNode *movingtracker=l1->val<=l2->val?l1:l2;
         movingtracker==l1?l1=l1->next:l2=l2->next;
         movingtracker->next=NULL;
         ListNode *result=movingtracker;
         while(l1&&l2){
             movingtracker->next=l1->val<=l2->val?l1:l2;
             movingtracker->next==l1?l1=l1->next:l2=l2->next;
             movingtracker=movingtracker->next;
             movingtracker->next=NULL;
         }
         movingtracker->next=l1==0?l2:l1;
         
         return result;
    }
};
