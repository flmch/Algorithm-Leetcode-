bool checkdup(vector<int> temp, vector<vector<int>> result){
    bool b=true;
    for(int i=0;i<result.size();i++){
        if(temp==result[i]){
            b=false;
        }
    }
    return b;
}

void generatesub(vector<int> &s, int step, vector<int> &temp, vector<vector<int>> &result){
     for(int i=step;i<s.size();i++){
         temp.push_back(s[i]);
         result.push_back(temp);
         if(i<s.size()-1){
             generatesub(s,i+1,temp,result);
         }
         temp.pop_back();
         while(i<s.size()&&s[i]==s[i+1]){
             i++;
         }
     }
}



class Solution {
public:
    vector<vector<int> > subsetsWithDup(vector<int> &S) {
         int len=S.size();
         vector<int> temp;
         vector<vector<int>> result;
         if(len==0){
             result.push_back(temp);
             return result;
         }else{
             sort(S.begin(),S.end());
             generatesub(S,0,temp,result);
             temp.clear();
             result.insert(result.begin(),temp);
             return result;
         }
    }
};
