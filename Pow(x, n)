class Solution {
public:
    double pow(double x, int n) {
        
        if(n==0){return 1;}
        
        
        int flag=1;
        if(n<0){
            n=-n;
            flag=0;
        }
        
        int sign=1;
        if(x<0){
            if(n%2==1){sign=-1;}
            x=-x;
        }
        
        if(x==1){return x*sign;}
        
        
        int count=0;
        double result=1,temp=1;
        while(n!=0){
            while(count*2<=n){
                if(count==0){
                    count=1;
                    temp=x;
                }else{
                    count*=2;
                    temp=temp*temp;
                    if(temp==0){
                        break;
                    }
                }
            }
            n-=count;
            result*=temp;
            if(result==0){
                break;
            }
            count=0;
            temp=1;
        }
        
        result=result*sign;
        
        return flag==1?result:(1/result);
    }
};
