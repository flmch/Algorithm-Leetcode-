/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {
        if(!l1&&!l2){return l1;}
        if(!l1){return l2;}
        if(!l2){return l1;}
        ListNode *resulthead, *last;
        ListNode *temp = new ListNode((l1->val+l2->val)%10);
        int carry = (l1->val+l2->val)/10;
        resulthead=temp;
        last=temp;
        l1=l1->next;
        l2=l2->next;
        while(l1||l2){
            if(!l1){
                ListNode *add = new ListNode(0);
                l1=add;
            }
            if(!l2){
                ListNode *add = new ListNode(0);
                l2=add;
            }
            
            ListNode *temp=new ListNode((l1->val+l2->val+carry)%10);
            carry = (l1->val+l2->val+carry)/10;
            last->next=temp;
            last=last->next;
            l1=l1->next;
            l2=l2->next;
        }
        
        if(carry==1){
            ListNode *temp = new ListNode(1);
            last->next=temp;
            last=last->next;
        }
        
        return resulthead;
    }
};
