class Solution {
public:
    int numDistinct(string S, string T) {
        int slen=S.size();
        int tlen=T.size();
        if(T.size()>S.size()){
            return 0;
        }
        
        vector<int> temp(slen,0);
        vector<vector<int> > dpmap(tlen,temp);
        
        for(int i=0;i<slen;i++){
            if(S[i]==T[0]){
                if(i==0){
                    dpmap[0][i]=1;
                }else{
                    dpmap[0][i]=dpmap[0][i-1]+1;
                }
            }else{
                if(i!=0){
                    dpmap[0][i]=dpmap[0][i-1];
                }
            }
        }
        
        
        for(int i=1;i<tlen;i++){
            for(int j=i;j<slen;j++){
                if(S[j]==T[i]){
                    dpmap[i][j]=dpmap[i][j-1]+dpmap[i-1][j-1];
                }else{
                    dpmap[i][j]=dpmap[i][j-1];
                }
            }
        }
        
        return dpmap[tlen-1][slen-1];
    }
};
