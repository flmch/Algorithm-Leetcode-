/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int> > levelOrderBottom(TreeNode *root) {
        vector<vector<int>> result;
        stack<vector<int>> reverseresult;
        vector<TreeNode*> track;
        vector<int> temp;
        if(!root){return result;}
        track.push_back(root);
        long cur=0,last=1;
        
        while(cur<track.size()){
            last = track.size();
            temp.clear();
            while(cur<last){
                temp.push_back(track[cur]->val);
                if(track[cur]->left){track.push_back(track[cur]->left);}
                if(track[cur]->right){track.push_back(track[cur]->right);}
                cur++;
            }
            reverseresult.push(temp);
        }
        
        while(!reverseresult.empty()){
            result.push_back(reverseresult.top());
            reverseresult.pop();
        }
        
        return result;
    }
};
