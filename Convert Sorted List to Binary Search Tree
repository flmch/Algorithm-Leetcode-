/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
TreeNode *listtoBST(ListNode *&head, TreeNode *&sub){
          
          if(!head){return sub;}
          else if(!head->next){
                TreeNode *temp=new TreeNode(head->val);
                return temp;
          }
          else{
                ListNode *fast=head->next,*slow=head;
                while(fast->next){
                fast=fast->next;
                    if(fast->next){
                        fast=fast->next;
                        slow=slow->next;
                    }
                }
          
          TreeNode *temp=new TreeNode(slow->next->val);
          sub=temp;
          
          ListNode *sublist1=head;
          ListNode *sublist2=slow->next->next;

              slow->next->next=NULL;
              slow->next=NULL;
            
              sub->left=listtoBST(sublist1,sub->left);
              sub->right=listtoBST(sublist2,sub->right);
              return sub;
          }
}
 
class Solution {
public:
    TreeNode *sortedListToBST(ListNode *head) {
            TreeNode *result=NULL;
            return listtoBST(head,result);
    }
};
