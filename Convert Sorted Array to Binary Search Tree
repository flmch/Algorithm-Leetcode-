/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 TreeNode *arraytoBST(vector<int> num,TreeNode *&head){
        int len=num.size();
        if(len>0){
            TreeNode *temp=new TreeNode(num[len/2]);
            head=temp;
        
        vector<int> subvec1;
        vector<int> subvec2;
        subvec1.assign(num.begin(),num.begin()+len/2);
        subvec2.assign(num.begin()+(len/2+1),num.end());
            
            head->left=arraytoBST(subvec1,head->left);
            head->right=arraytoBST(subvec2,head->right);
        
        return head;    
        }else{
            return head;
        }
        
 }
 
class Solution {
public:
    TreeNode *sortedArrayToBST(vector<int> &num) {
            TreeNode *head=NULL;
            head=arraytoBST(num,head);
            return head;
    }
};
