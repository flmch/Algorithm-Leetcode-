void getall(vector<string> &result,string &temp,int st,int curnum, string s){
     if(st==s.size()){
         result.push_back(temp);
     }else{
         for(int i=st;i<=st+2;i++){
             string cur=s.substr(st,i-st+1);
             int in=0;
             for(int k=0;k<cur.size();k++){
                 in=in*10+(cur[k]-48);
             }
             
             if(in<256&&(s.size()-i-1)>=(4-curnum)&&(s.size()-i-1)<=3*(4-curnum)){
                 if(curnum!=1){
                     temp.push_back('.');
                 }
                 temp.append(cur);
                 getall(result,temp,i+1,curnum+1,s);
                 temp.erase(temp.end()-cur.size(),temp.end());
                 if(curnum!=1){
                     temp.erase(temp.end()-1,temp.end());
                 }
             }
             
             if(s[st]=='0'){
                 break;
             }
         }
     }
}


class Solution {
public:
    vector<string> restoreIpAddresses(string s) {
        vector<string> result;
        string temp;
        if(s.size()<4||s.size()>12){
            return result;
        }else{
            getall(result,temp,0,1,s);
        }
        
        return result;
    }
};
